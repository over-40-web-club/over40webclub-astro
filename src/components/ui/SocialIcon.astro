---
import Icon from './Icon.astro';

export interface Props {
  platform: string;
  username?: string;
  url?: string;
  class?: string;
}

const { platform, username, url, class: className = '' } = Astro.props;

// Generate URL based on platform and username/url
const getUrl = (platform: string, username?: string, url?: string): string => {
  if (url) return url;

  const platformUrls: Record<string, string> = {
    twitter: `https://twitter.com/${username}`,
    facebook: `https://facebook.com/${username}`,
    linkedin: `https://linkedin.com/in/${username}`,
    github: `https://github.com/${username}`,
    medium: `https://medium.com/@${username}`,
    instagram: `https://instagram.com/${username}`,
    youtube: `https://youtube.com/c/${username}`,
    homepage: username || '#!', // For homepage, username is actually the URL
  };

  return platformUrls[platform] || '#!';
};

const href = getUrl(platform, username, url);
const ariaLabel = `${platform.charAt(0).toUpperCase() + platform.slice(1)} profile`;
---

<a
  class={`btn-social ${className}`}
  href={href}
  target='_blank'
  rel='noopener noreferrer'
  aria-label={ariaLabel}
>
  <Icon name={platform} />
</a>

<style>
  .btn-social {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    text-decoration: none;
    background-color: #333;
    color: white;
    border: none;
    margin: 0 2px;
  }

  .btn-social:hover {
    background-color: rgb(198, 221, 65);
    color: #000;
    transform: translateY(-2px);
  }

  .btn-social:focus {
    outline: 2px solid rgb(198, 221, 65);
    outline-offset: 2px;
  }
</style>
